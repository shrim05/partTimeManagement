<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.ddit.alba.dao.IAlbaDAO">
<sql id="searchFrag">
	<where>
		<if test="searchMap!=null">
			<if	test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.searchWord)">
			<choose>
				<when test="'id'.equals(searchMap.searchType)">
					INSTR(AL_ID,#{searchMap.searchWord})>0
				</when>
				<when test="'name'.equals(searchMap.searchType)">
					INSTR(AL_NAME, #{searchMap.al_name})>0
				</when>
				<when test="'address'.equals(searchMap.searchType)">
					AL_ADDRESS LIKE '%'||#{searchMap.searchWord} ||'%'
				</when>
				<otherwise>
					INSTR(AL_ID,#{searchMap.searchWord})>0
					OR INSTR(AL_NAME,#{searchMap.searchWord})>0
					OR AL_ADDRESS LIKE '%'||#{searchMap.searchWord} ||'%'
				</otherwise>
			</choose>	
			</if>
		</if>
	</where>
</sql>

<select id="selectAlbaCount" parameterType="PagingInfoVO" resultType="int">
SELECT COUNT(AL_ID) FROM ALBA
<include refid="searchFrag" />
</select>

<select id="selectAlbaList" parameterType="PagingInfoVO" resultType="AlbaVO">
	SELECT A.*
	FROM(
		SELECT ROWNUM RNUM, AL_ID, AL_NAME, AL_AGE, AL_ADDRESS, AL_HP, AL_SPEC, AL_DESC,
		GR_NAME, AL_CAREER, AL_GEN, AL_BTYPE, AL_MAIL
		FROM ALBA A INNER JOIN GRADE G ON (A.GR_CODE=G.GR_CODE)
		<include refid="searchFrag" />
	) A
	WHERE RNUM BETWEEN #{startRow} AND #{endRow}
</select>
<select id="selectLicImg" parameterType="LicenseVO" resultType="LicenseVO">
	SELECT 
		LIC_IMAGE
	FROM LIC_ALBA
	WHERE AL_ID = #{al_id}
	AND 
	LIC_CODE =#{lic_code}
</select>
<resultMap type="AlbaVO" id="albaMap" autoMapping="true">
	<id column="AL_ID" property="al_id" />
	<collection property="licList" javaType="java.util.List" ofType="LicenseVO" autoMapping="true">
		<id column="LIC_CODE" property="lic_code" />
	</collection>
</resultMap>
<select id="selectAlba" parameterType="AlbaVO" resultMap="albaMap">
	SELECT A.AL_ID, AL_NAME, AL_AGE, AL_ADDRESS, AL_HP, AL_SPEC, AL_DESC,
		G.GR_NAME, A.GR_CODE, AL_CAREER, AL_GEN, AL_BTYPE, AL_MAIL, LL.LIC_CODE, LL.LIC_NAME
		FROM ALBA A INNER JOIN GRADE G ON (A.GR_CODE=G.GR_CODE)
        LEFT OUTER JOIN (
        SELECT AL_ID, LI.LIC_CODE, LIC_NAME 
        FROM LICENSE LI, LIC_ALBA LA 
        WHERE LI.LIC_CODE = LA.LIC_CODE
        ) LL ON (A.AL_ID = LL.AL_ID)
		WHERE A.AL_ID = #{al_id}
</select>

<update id="updateAlba" parameterType="AlbaVO" >
	UPDATE ALBA
	SET 
	AL_NAME = #{al_name},
	AL_AGE = #{al_age},
	AL_ADDRESS = #{al_address},
	AL_HP = #{al_hp},
	AL_SPEC = #{al_spec},
	AL_DESC = #{al_desc},
	GR_CODE = #{gr_code},
	AL_CAREER = #{al_career},
	AL_GEN = #{al_gen},
	AL_BTYPE = #{al_btype},
	AL_MAIL = #{al_mail}
	WHERE	
	AL_ID = #{al_id}
</update>

<!-- <update id="updateLic_Alba" parameterType="AlbaVO"> -->
<update id="updateLic_Alba" parameterType="LicenseVO">
<if test="lic_image!=null">
<!-- <if test="licList!=null"> -->
<!-- <foreach collection="licList" item="lic" separator=";" open="DECLARE BEGIN" close="; END;"> -->
	UPDATE LIC_ALBA
	SET LIC_IMAGE = #{lic_image,jdbcType=BLOB}
	WHERE 
	AL_ID=#{al_id} 
	AND
	LIC_CODE=#{lic_code}
<!-- </foreach> -->
<!-- </if> -->
</if>
</update>

<insert id="insertAlba" parameterType="AlbaVO">
	<selectKey order="BEFORE" resultType="String" keyProperty="al_id">
	SELECT 'ALBA_'||LPAD(NVL(TO_NUMBER(SUBSTR(MAX(AL_ID), 6)),0) + 1, 3, '0')
     FROM ALBA 
	</selectKey>
	 INSERT INTO alba (
    AL_ID,     AL_NAME,     AL_AGE,    AL_ADDRESS,
    AL_HP,    AL_SPEC,    AL_DESC,    GR_CODE,
    AL_CAREER,    AL_GEN,    AL_BTYPE,    AL_MAIL
) VALUES (
     #{al_id},     #{al_name},     #{al_age},    #{al_address},
    #{al_hp},    #{al_spec},    #{al_desc},    #{gr_code},
    #{al_career},    #{al_gen},    #{al_btype},    #{al_mail}
)
</insert>
<insert id="insertLicAlba" parameterType="LicenseVO">
	MERGE INTO LIC_ALBA TA
    USING DUAL
	ON(AL_ID = #{al_id} AND TA.LIC_CODE = #{lic_code})
<!-- 	WHEN MATCHED THEN  -->
<!-- 	UPDATE SET TA.LIC_IMAGE =  -->
<!-- 	<if test ="lic_image!=null"> -->
<!-- 	#{lic_image,jdbcType=BLOB} -->
<!-- 	</if> -->
<!-- 	<if test ="lic_image==null"> -->
<!-- 	NULL -->
<!-- 	</if> -->
	WHEN NOT MATCHED THEN
	INSERT (TA.AL_ID, TA.LIC_CODE
<!-- 	<if test ="lic_image!=null"> -->
<!-- 	, TA.LIC_IMAGE -->
<!-- 	</if> -->
	)
	VALUES(
		#{al_id}, #{lic_code}
<!-- 		<if test ="lic_image!=null"> -->
<!-- 		, #{lic_image,jdbcType=BLOB} -->
<!-- 		</if> -->
	)
</insert>

<delete id="deleteAlba" parameterType="AlbaVO">
	   DELETE FROM ALBA 		
	   WHERE AL_ID =#{al_id}
</delete>

<delete id="deleteLicAlba" parameterType="LicenseVO">
	DELETE FROM LIC_ALBA
	WHERE AL_ID=#{al_id}
	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(lic_code)">
	AND LIC_CODE=#{lic_code}
	</if>
</delete>
<select id="selectGradeList" resultType="GradeVO">
	SELECT GR_CODE, GR_NAME FROM GRADE
</select>
<select id="selectLicenseList" resultType="LicenseVO">
	SELECT LIC_CODE, LIC_NAME FROM LICENSE
</select>
</mapper>
